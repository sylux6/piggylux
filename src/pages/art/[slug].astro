---
import Base from '../../layouts/Base.astro'
import { getCollection } from 'astro:content'

export async function getStaticPaths() {
  const artworks = await getCollection('artworks')
  return artworks.map((entry) => ({
    params: { slug: entry.slug },
    props: { a: entry.data, slug: entry.slug },
  }))
}

const { a } = Astro.props
const PLACEHOLDER = '/placeholder.jpg' // from /public
const title = `${a.title || 'Untitled'}${a.year ? ` (${a.year})` : ''}`
const images = a.images?.length ? a.images : [a.cover ?? PLACEHOLDER]

const jsonLd = {
  '@context': 'https://schema.org',
  '@type': 'VisualArtwork',
  name: a.title || 'Untitled',
  creator: { '@type': 'Person', name: 'Your Name' },
  dateCreated: a.year || undefined,
  artMedium: a.media,
  image: images[0],
  keywords: a.tags?.join(', '),
}
---
<Base title={`${title} — Your Name`} description={a.description || 'Coming soon.'}>
  <main class="mx-auto max-w-3xl px-4 py-10">
    <h1 class="text-2xl mb-1">{title}</h1>
    <p class="text-sm opacity-70 mb-6">
      {[a.media, a.dimensions, a.year].filter(Boolean).join(' · ')}
    </p>

    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
      {images.map((src) => (
        <img
          src={src}
          alt={a.title || 'Coming soon'}
          loading="lazy"
          sizes="(max-width:768px) 100vw, 50vw"
          class="rounded-2xl w-full h-auto"
        />
      ))}
    </div>

    {a.description && <p class="mt-6 leading-relaxed opacity-90">{a.description}</p>}
    <script type="application/ld+json">{JSON.stringify(jsonLd)}</script>
  </main>
</Base>
